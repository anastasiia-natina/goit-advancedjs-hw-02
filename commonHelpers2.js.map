{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n      if (selectedDate > new Date()) {\n      document.querySelector('[data-start]').removeAttribute('disabled');\n    } else {\n      window.alert(\"Please choose a date in the future\");\n      document.querySelector('[data-start]').setAttribute('disabled', 'true');\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet countdownInterval;\n\nfunction startCountdown(endDate) {\n  countdownInterval = setInterval(() => {\n    const currentDate = new Date();\n    const difference = endDate - currentDate;\n\n    if (difference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(difference);\n      updateTimerUI({ days, hours, minutes, seconds });\n    }\n  }, 1000);\n}\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  const selectedDate = flatpickr.parseDate(document.querySelector('#datetime-picker').value);\n  if (selectedDate) {\n    startCountdown(selectedDate);\n  }\n});\n\ndocument.querySelector('[data-start]').setAttribute('disabled', 'true');"],"names":["options","selectedDates","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","countdownInterval","startCountdown","endDate","currentDate","difference","updateTimerUI","selectedDate"],"mappings":"wIAGA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACAA,EAAc,GAEd,IAAI,KACvB,SAAS,cAAc,cAAc,EAAE,gBAAgB,UAAU,GAEjE,OAAO,MAAM,oCAAoC,EACjD,SAAS,cAAc,cAAc,EAAE,aAAa,WAAY,MAAM,EAEzE,CACH,EAEAC,EAAU,mBAAoBF,CAAO,EAErC,SAASG,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIC,EAEJ,SAASC,EAAeC,EAAS,CAC/BF,EAAoB,YAAY,IAAM,CACpC,MAAMG,EAAc,IAAI,KAClBC,EAAaF,EAAUC,EAE7B,GAAIC,GAAc,EAChB,cAAcJ,CAAiB,EAC/BK,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,MACtD,CACL,KAAM,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAU,EAC9DC,EAAc,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAAA,CAChD,CACF,EAAE,GAAI,CACT,CAEA,SAASM,EAAc,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxD,SAAS,cAAc,aAAa,EAAE,YAAcP,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC/E,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,MAAMO,EAAef,EAAU,UAAU,SAAS,cAAc,kBAAkB,EAAE,KAAK,EACrFe,GACFL,EAAeK,CAAY,CAE/B,CAAC,EAED,SAAS,cAAc,cAAc,EAAE,aAAa,WAAY,MAAM"}